# old raft data
#data = [
#    ((1318.6, 0.7578), ()),
#    ((3127.7, 0.633), ()),
#    ((5746.4, 0.691), ()),
#    ((8918.7, 0.896), ()),
#    ((10011, 1.592), ()),
#    ((9662.4, 3.783), ()),
#    ((5407.8, 21.23), ())
#]

# raft_data = [
#     ((1481.2347756, 0.0006748), (115.23976932061716, 5.8478714076149087e-05)),
#     ((2973.7594582, 0.0006682), (115.31232440221652, 2.6110534272588155e-05)),
#     ((5683.3928618, 0.0007068), (655.5199363315527, 7.91338107258838e-05)),
#     ((8577.377787200001, 0.0011314), (2751.6134956470673, 0.0006444515808033991)),
#     ((11370.151721799999, 0.0014196), (1466.5849894816265, 0.00017059730361292352)),
#     ((11773.8863236, 0.0028132), (2568.0600801638166, 0.0006635816151763096)),
#     ((5003.3753538, 0.0224856), (3482.228983780833, 0.01514755701227099))
# ]
# 
# paxos_data = [
#     ((1239.9464326000002, 0.0008136), (127.19498526510282, 9.443855145013606e-05)),
#     ((1889.4223832, 0.0010862), (316.31463715612256, 0.00023000034782582395)),
#     ((2098.7487352, 0.0019242000000000003), (237.67844940526848, 0.00021495245986031424)),
#     ((2337.7608700000005, 0.0034306), (173.86936438704416, 0.000288515926770083)),
#     ((2374.0545064000003, 0.0069765999999999995), (399.0813135471565, 0.0014890374877752405)),
#     ((2495.4660266, 0.012984399999999998), (335.05335925485485, 0.0021738080504037144)),
#     ((1131.5804409999998, 0.26338819999999996), (1134.5889673470597, 0.2434454585622003))
# ]

# raft_data = [
#     ((1404.03894, 0.0007218), (196.72880935078481, 0.00011147806959218478)),
#     ((2981.6887024, 0.0006658), (69.46132090647625, 1.710438540258026e-05)),
#     ((1756.1097372, 0.0021483999999999995), (291.82410882470367, 0.0002986285987644183)),
#     ((1228.0523529999998, 0.0094554), (556.1110543642027, 0.007720031828949929)),
#     ((818.6819718, 0.1092296), (513.3713198703464, 0.1814590860448713)),
#     ((1197.334685, 0.04399840000000001), (744.3576838847023, 0.03450006018893301)),
#     ((989.697152, 0.08992959999999998), (540.6561687817732, 0.05205723692475427))
# ]
# 
# paxos_data = [
#     ((1327.5876954, 0.000749), (67.70080208063308, 3.562583332358698e-05)),
#     ((1874.3486188000002, 0.0010685999999999998), (160.628636026794, 8.811946436514469e-05)),
#     ((2379.4595298, 0.0016903999999999999), (196.73237989705046, 0.00014605012838063511)),
#     ((2547.3917818, 0.0031909999999999994), (330.2997717511581, 0.0004423686245655315)),
#     ((2609.9855054, 0.0061462), (154.7422338938834, 0.000340218988300183)),
#     ((4047.1156524000007, 0.007956399999999999), (333.55554395560176, 0.0007150884141139472)),
#     ((4204.741624200001, 0.0152144), (395.9015532957685, 0.001527473024311723))
# ]

# raft_data = [
#     ((1162.8215852, 0.0012032), (583.0099515028979, 0.001021231687718316)),
#     ((2865.2047992, 0.0006944000000000001), (103.05149707227847, 2.544484230644787e-05)),
#     ((3423.0334438, 0.0013132), (971.5814874113546, 0.000537526706313277)),
#     ((2564.112596, 0.004935), (1503.6636100068156, 0.0033451679180573285)),
#     ((2279.5617744, 0.0091058), (1103.790830221931, 0.004537860791165811)),
#     ((2216.4778892000004, 0.11490239999999999), (2096.352787871048, 0.13101464337332677)),
#     ((1316.7952556, 0.091195), (1038.2288461381029, 0.08092864518821503))
# ]
# 
# paxos_data = [
#     ((1363.8548942000002, 0.0007296000000000001), (59.645680944845644, 3.382661673889365e-05)),
#     ((1846.8743328, 0.0010912), (221.03968391245178, 0.00012578298772091557)),
#     ((2759.6194216, 0.0014456), (96.18501855678036, 4.9402833926810296e-05)),
#     ((2336.8765274, 0.003491), (363.00974372668105, 0.00048544124258245703)),
#     ((3170.1875746, 0.0056044), (1051.1350991711474, 0.001723315362897923)),
#     ((4457.7881738, 0.0071896), (134.55682380209012, 0.00025777323367642336)),
#     ((2891.6898968, 0.06868860000000002), (1462.4833460918635, 0.10058546786608888))
# ]

# raft_data = [
#     ((1162.8215852, 0.0012032), (583.0099515028979, 0.001021231687718316)),
#     ((2865.2047992, 0.0006944000000000001), (103.05149707227847, 2.544484230644787e-05)),
#     ((3423.0334438, 0.0013132), (971.5814874113546, 0.000537526706313277)),
#     ((2564.112596, 0.004935), (1503.6636100068156, 0.0033451679180573285)),
#     ((2279.5617744, 0.0091058), (1103.790830221931, 0.004537860791165811)),
#     ((2216.4778892000004, 0.11490239999999999), (2096.352787871048, 0.13101464337332677)),
#     #((1316.7952556, 0.091195), (1038.2288461381029, 0.08092864518821503))
# ]

# this is without decision messages
# paxos_data = [
#     ((1495.4901778, 0.000674), (160.47495119815412, 8.114924522138208e-05)),
#     ((3058.616726, 0.0006504), (99.13041038068887, 2.3061656488639293e-05)),
#     ((5450.2173250000005, 0.0007350000000000001), (484.1351544188892, 6.429930015171238e-05)),
#     ((6466.5230666, 0.0013072000000000001), (1653.091667499019, 0.000307895047053375)),
#     ((5745.2012032, 0.0027998000000000003), (528.4636981124402, 0.00023986112648780755)),
#     ((4652.1586048, 0.0108826), (2020.6523329705908, 0.009580692931098459)),
#     #((6493.889658, 0.0098136), (310.71975644051565, 0.00047055227127280994))
# ]
# 
# etcd_data = [
#     ((877.9223006, 0.0010793999999999999), (22.566118602648118, 2.816096589252575e-05)),
#     ((1637.6230317999998, 0.0011736), (88.73067800718809, 6.804586688403632e-05)),
#     ((2573.5182628, 0.0015234), (137.1481798956831, 8.243445881426045e-05)),
#     ((3155.800956, 0.0023016), (136.73423437923793, 0.00014490355413170509)),
#     ((3206.5171926, 0.0043214), (184.5574817826298, 0.000287244564787569)),
#     ((3357.4408224, 0.0081098), (19.180243744415133, 2.3599999999999784e-05)),
#     ((3204.6233110000003, 0.0168004), (207.64238931920704, 0.0014981189004882086)),
#     ((3257.6379057999998, 0.0285746), (87.24750394389972, 0.000713863460333977)),
#     ((3248.8708762, 0.0290806), (18.969672889851612, 0.0019217198130841023))
# ]

# big_raft_data = [
#     ((850.6073102, 0.0011692), (7.82747879929409, 1.0870142593360977e-05)),
#     ((1670.4190826000001, 0.0011899999999999999), (17.095540958644314, 1.2214745187682006e-05)),
#     ((3352.1926135999993, 0.0011876), (25.610682900476966, 7.889233169326415e-06)),
#     ((6698.420053600001, 0.0011874), (20.94924831796126, 3.7202150475476894e-06)),
#     ((10493.345061, 0.0015174), (209.82886562854452, 3.1878519413548646e-05)),
#     ((11066.211971599998, 0.003718), (4072.857456694099, 0.0024261135175419964)),
#     ((7774.1419324, 0.0131114), (4279.443639281883, 0.00931980082619795))
# ]

# 8 to 40 by 4s
big_raft_data = [
    ((6716.7990266, 0.0011844), (29.30399690683042, 5.161395160225586e-06)),
    #((6018.1222648, 0.0015708), (3324.0372203052516, 0.0003624910481653305)),
    #((5757.326451399999, 0.0019039999999999999), (2777.8945222489106, 6.61059755241536e-05)),
    ((9229.301308400001, 0.0019893999999999997), (338.30767451227524, 7.005883241961715e-05)),
    ((11270.3336588, 0.0020683999999999998), (508.74889759095663, 7.076044092570372e-05)),
    #((10179.187578000001, 0.006631), (4542.882731433947, 0.00891656059251548)),
    ((13283.0242936, 0.0022939999999999996), (733.6831665344241, 6.115226896853455e-05)),
    ((13952.0787518, 0.0025574000000000005), (777.7715240950836, 0.00014680953647498517)),
    ((12770.4078526, 0.0032664), (2839.4147646798597, 0.0010411091393317036))
]

big_paxos_data = [
    ((3431.5004934, 0.0002854), (33.43214093563252, 2.8705400188814436e-06)),
    ((6079.722873600001, 0.0003216), (13.132497194822568, 4.898979485566475e-07)),
    ((7897.5505588, 0.0004996), (37.62427763436527, 2.5768197453449952e-06)),
    ((8172.4123018, 0.0009717999999999999), (98.50214222293032, 1.2106196760337223e-05)),
    ((8385.2829652, 0.0014236000000000001), (75.59487134737984, 1.3062924634246364e-05)),
    ((8465.5188734, 0.0018824), (70.66070342531873, 1.6644518617250546e-05)),
    ((8115.484274, 0.0024398), (478.54729782762894, 0.00010589693102257492)),
    ((8146.4365578, 0.00296), (620.4218955097037, 0.0002478023405862019)),
    ((8587.219129199999, 0.003245), (374.6274386617996, 0.0001346046061618992)),
    ((8574.3260598, 0.0036928000000000004), (541.39964619479, 0.0002083683277276084)),
    ((8953.5301662, 0.0039752), (420.1853476839421, 0.00015615556346156853)),
    ((9622.266049, 0.0041389999999999995), (335.55958774762104, 0.0001335619706353572)),
    ((9006.8836048, 0.0052975999999999995), (590.0087452508711, 0.00030386023102735906)),
    ((9101.8707432, 0.0060958), (370.60473318133427, 0.00027181861599235614)),
    ((9487.1806216, 0.006151800000000001), (659.2127596610522, 0.000646872290332489))
]

big_raft_tcp_data = [
    ((3036.2257624, 0.0003234), (34.2982796762955, 3.3823069050575514e-06)),
    ((5768.052436, 0.0003398), (68.28703086060429, 3.969886648255833e-06)),
    ((10066.9256982, 0.00039000000000000005), (80.2448517147465, 3.2863353450309976e-06)),
    ((12887.271641599998, 0.0006074), (73.2265339940317, 3.006659275674578e-06)),
    ((14311.6079118, 0.0008208), (32.42550097964106, 2.4819347291981706e-06)),
    ((14846.330739599998, 0.0010572), (493.5975994062019, 3.8436441042323366e-05)),
    ((13061.137241600001, 0.0015040000000000001), (143.19869653533425, 1.982927129271272e-05)),
    ((13476.862190999998, 0.0017514000000000002), (143.6788206493341, 2.049975609611e-05)),
    ((12917.2478658, 0.002196), (2344.677171286833, 0.00048288218024690043)),
    ((12677.444407599998, 0.0026084), (2398.375590571937, 0.0006487084399019331)),
    ((11248.2918002, 0.00412), (4321.498114582756, 0.0026291695266756764)),
    ((8966.384931, 0.006010400000000001), (4511.265526910791, 0.0036543412320143285)),
    ((8568.0810758, 0.0079842), (4791.72582633771, 0.005139600583702979)),
    ((4739.3883766, 0.013859199999999999), (2240.408917369707, 0.005432953612907071)),
    ((3997.1463582000006, 0.0183376), (1413.43011953781, 0.00700367039772718))
]

big_paxos_no_decision_data = [
    ((3126.587791, 0.0003131999999999999), (22.064939974205654, 2.481934729198159e-06)),
    ((5896.6640266, 0.00033180000000000004), (31.31606021435868, 1.7204650534085306e-06)),
    ((9841.9113038, 0.0003984), (88.91350353128003, 3.611094017053565e-06)),
    ((12240.425094399998, 0.0006395999999999999), (48.74640137608758, 3.072458299147432e-06)),
    ((12874.7473006, 0.0009134), (137.80496313718507, 1.1394735626595286e-05)),
    ((13389.6118824, 0.0011727999999999999), (44.913470653402506, 5.15363949069001e-06)),
    ((13117.498878400002, 0.0014360000000000002), (725.3741196957673, 1.131370849898477e-05)),
    ((9784.1702614, 0.0016847999999999998), (3595.438317809623, 1.592984620139191e-05)),
    ((11653.3994596, 0.0019470000000000002), (3271.1879506821656, 4.706166167912059e-05)),
    ((12416.4343946, 0.002179), (1167.9435245761597, 2.672077843177488e-05)),
    ((13522.947370600003, 0.0023962000000000002), (1728.2294564461583, 1.231909087554762e-05)),
    ((14595.2966312, 0.0026433999999999997), (584.913562849068, 1.0632027088001578e-05)),
    ((14081.620649, 0.0031244000000000003), (921.5824475196922, 1.995595149322627e-05)),
    ((12481.7041472, 0.003562), (3283.220605500724, 2.5258661880630197e-05)),
    ((13938.6087088, 0.0040374), (2217.150300717819, 2.8153862967628336e-05))
]


class PlotRequest(object):
    def __init__(self, data, x_range, y_range):
        self.data = data
        self.x_range = x_range
        self.y_range = y_range

#raft_plot = PlotRequest(raft_data, (0, 6500), (0, 0.025))
#paxos_plot = PlotRequest(paxos_data, (0, 6500), (0, 0.025))
#etcd_plot = PlotRequest(etcd_data, (0, 3500), (0, 0.035))

#big_raft_plot = PlotRequest(big_raft_data, (0, 14000), (0, 0.005))
big_paxos_plot = PlotRequest(big_paxos_data, (0, 10000), (0, 0.007))
big_raft_tcp_plot = PlotRequest(big_raft_tcp_data, (0, 15000), (0, 0.02))

class RangeTransformer(object):
    def __init__(self, input_range, output_range):
        (i_min, i_max) = input_range
        (o_min, o_max) = output_range

        self.i_min = i_min
        self.i_max = i_max
        self.o_min = o_min
        self.o_max = o_max

    def transform(self, x):
        #if x < self.i_min or x > self.i_max:
        #    raise Exception("transform: input %s out of range" % x)
        return ((x - self.i_min) / float(self.i_max - self.i_min)) * (self.o_max - self.o_min) + self.o_min

    def scale(self, x):
        return (x / float(self.i_max - self.i_min)) * (self.o_max - self.o_min)

class PairTransformer(object):
    def __init__(self, x_trans, y_trans):
        self.x_t = x_trans
        self.y_t = y_trans

    def transform(self, pt):
        return (self.x_t.transform(pt[0]), self.y_t.transform(pt[1]))

def circle(pt, radius='1pt', options=''):
    return r'\fill[%s] %s circle[radius=%s];' % (options,pt, radius)

def line(src, dst, options=''):
    return r'\draw[%s] %s -- %s;' % (options, src, dst)

def arrow(src, dst, options=''):
    return r'\draw[->, %s] %s -- %s;' % (options, src, dst)

ERROR_BAR_DIM = 0.025

def horiz_error_bar(pt, size):
    e = ERROR_BAR_DIM

    if size < e:
        return ''

    bar = "++(0,%s) -- ++(0,%s) -- ++(0,%s)" % (e, -2*e, e)

    return r'\draw[gray] %s -- ++(%s,0) -- %s -- ++(%s,0) -- %s;' % (pt, -size, bar, 2*size, bar)

def vert_error_bar(pt, size):
    e = ERROR_BAR_DIM

    if size < e:
        return ''

    bar = "++(%s,0) -- ++(%s,0) -- ++(%s,0)" % (e, -2*e, e)

    return r'\draw[gray] %s -- ++(0,%s) -- %s -- ++(0,%s) -- %s;' % (pt, -size, bar, 2*size, bar)

def plot_data(T, data, options=''):
    result = []
    for (pt, dev) in data:
        result.append(horiz_error_bar(T.transform(pt), T.x_t.scale(dev[0])))
        result.append(vert_error_bar(T.transform(pt), T.y_t.scale(dev[1])))

    for (pt, _) in data:
        result.append(circle(T.transform(pt), radius='1pt', options=options))

    for ((pt1, _), (pt2, _)) in zip(data, data[1:]):
        result.append(line(T.transform(pt1), T.transform(pt2), options=options))

    return result


def plot(T, data, options=''):
    result = []

    result.append(arrow((-0.2, 0), (5.2, 0)))
    result.append(arrow((0, -0.2), (0, 3.2)))

    result.extend(plot_data(T, data, options=options))

    return result

def document(tikz):
    return r"""\documentclass{standalone}

\usepackage{tikz}
\usetikzlibrary{positioning}

\begin{document}

\begin{tikzpicture}
%s
\end{tikzpicture}

\end{document}""" % tikz

def main():
    x_output_range = (0, 5)
    y_output_range = (0, 3)

    plots = [big_raft_tcp_plot, big_paxos_plot]

    T = PairTransformer(RangeTransformer(plots[0].x_range, x_output_range),
                        RangeTransformer(plots[0].y_range, y_output_range))

    lines = plot(T, plots[0].data, options='blue')
    lines.extend(plot_data(T, plots[1].data, options='red'))
    lines.extend(plot_data(T, big_paxos_no_decision_data, options='green'))
    print document("\n".join(lines))

if __name__ == '__main__':
    main()
