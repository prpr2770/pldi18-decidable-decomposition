build_directory:
  vard-build
provision: |
  yes | sudo add-apt-repository ppa:avsm/ppa
  sudo apt-get update -qq
  sudo apt-get install -qq git g++ make ocaml ocaml-native-compilers camlp4-extra opam m4
  yes | opam init
  eval `opam config env`
  opam repo add coq-released https://coq.inria.fr/opam/released
  opam repo add distributedcomponents-dev http://opam-dev.distributedcomponents.net
  git clone -b correct-client-ids https://github.com/DistributedComponents/verdi-runtime.git
  pushd verdi-runtime
  yes | opam pin add verdi-runtime .
  popd
  yes | opam install -j 1 verdi StructTact verdi-runtime ocamlbuild cheerios cheerios-runtime
  # vard
  git clone -b vard-diskless https://github.com/uwplse/verdi-raft.git
  pushd verdi-raft
  ./configure
  make vard-diskless
  popd
  ln -s verdi-raft/extraction/vard-diskless vard
  # # etcd
  # curl -L https://github.com/coreos/etcd/releases/download/v2.0.9/etcd-v2.0.9-linux-amd64.tar.gz -o etcd-v2.0.9-linux-amd64.tar.gz
  # tar xzf etcd-v2.0.9-linux-amd64.tar.gz
  # ln -s etcd-v2.0.9-linux-amd64 etcd
  # ivyd
  # mkdir ivyd
  # pushd ivyd
  # curl -L http://homes.cs.washington.edu/~jrw12/ivy-raft-eval.tgz -o ivy-raft-eval.tgz
  # tar xzf ivy-raft-eval.tgz
  # pushd ivy-raft-eval
  # make
  # cp build/raft-server ../ivyd
  # popd
  # popd
vars:
  service: vard
instances:
  client:
    type: m4.xlarge
  db1:
    type: m4.xlarge
  db2:
    type: m4.xlarge
  db3:
    type: m4.xlarge
setup:
  db1: |
    vard/varddiskless.native -port 8000 -node 0,$db1:9000 -node 1,$db2:9000 -node 2,$db3:9000 -me 0
  db2: |
    vard/varddiskless.native -port 8000 -node 0,$db1:9000 -node 1,$db2:9000 -node 2,$db3:9000 -me 1
  db3: |
    vard/varddiskless.native -port 8000 -node 0,$db1:9000 -node 1,$db2:9000 -node 2,$db3:9000 -me 2
