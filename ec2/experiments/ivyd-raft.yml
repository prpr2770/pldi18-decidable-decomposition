build_directory:
  raft-build
provision: |
  yes | sudo add-apt-repository ppa:avsm/ppa
  sudo apt-get update -qq
  sudo apt-get install -qq git g++ make ocaml ocaml-native-compilers camlp4-extra opam m4
  # yes | opam init
  # eval `opam config env`
  # opam repo add coq-released https://coq.inria.fr/opam/released
  # opam repo add distributedcomponents-dev http://opam-dev.distributedcomponents.net
  # yes | opam install -j 1 verdi StructTact verdi-runtime ocamlbuild cheerios cheerios-runtime
  # # vard
  # git clone -b vard-diskless https://github.com/uwplse/verdi-raft.git
  # pushd verdi-raft
  # ./configure
  # make vard
  # popd
  # ln -s verdi-raft/extraction/vard-diskless vard
  # # etcd
  # curl -L https://github.com/coreos/etcd/releases/download/v2.0.9/etcd-v2.0.9-linux-amd64.tar.gz -o etcd-v2.0.9-linux-amd64.tar.gz
  # tar xzf etcd-v2.0.9-linux-amd64.tar.gz
  # ln -s etcd-v2.0.9-linux-amd64 etcd
  # ivyd
  pushd build
  make
  popd
vars:
  service: vard
instances:
  client:
    type: m4.xlarge
  db1:
    type: m4.xlarge
  db2:
    type: m4.xlarge
  db3:
    type: m4.xlarge
setup:
  db1: |
    build/build/server --cluster "$db1:9001,$db2:9001,$db3:9001" --node-id 0
  db2: |
    build/build/server --cluster "$db1:9001,$db2:9001,$db3:9001" --node-id 1
  db3: |
    build/build/server --cluster "$db1:9001,$db2:9001,$db3:9001" --node-id 2
